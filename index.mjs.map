{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport resolveGetter from '@stdlib/array-base-resolve-getter';\n\n\n// MAIN //\n\n/**\n* Splits element values into two groups according to an predicate function.\n*\n* @param {Collection} x - input array\n* @param {Function} predicate - predicate function specifying which group an element in the input collection belongs to\n* @param {*} [thisArg] - predicate function execution context\n* @returns {Object} group results\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n*\n* var x = [ 'beep', 'boop', 'foo', 'bar' ];\n*\n* var out = bifurcateValuesBy( x, predicate );\n* // returns [ [ 'beep', 'boop', 'bar' ], [ 'foo' ] ]\n*/\nfunction bifurcateValuesBy( x, predicate, thisArg ) {\n\tvar get;\n\tvar len;\n\tvar out;\n\tvar v;\n\tvar i;\n\n\t// Get the number of elements to group:\n\tlen = x.length;\n\tif ( len === 0 ) {\n\t\treturn [];\n\t}\n\t// Resolve an accessor for retrieving array elements:\n\tget = resolveGetter( x );\n\n\t// Loop over the elements and assign each to a group...\n\tout = [ [], [] ];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = get( x, i );\n\t\tif ( predicate.call( thisArg, v, i, x ) ) {\n\t\t\tout[ 0 ].push( v );\n\t\t} else {\n\t\t\tout[ 1 ].push( v );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default bifurcateValuesBy;\n"],"names":["bifurcateValuesBy","x","predicate","thisArg","get","len","out","v","i","length","resolveGetter","call","push"],"mappings":";;oGA6CA,SAASA,EAAmBC,EAAGC,EAAWC,GACzC,IAAIC,EACAC,EACAC,EACAC,EACAC,EAIJ,GAAa,KADbH,EAAMJ,EAAEQ,QAEP,MAAO,GAOR,IAJAL,EAAMM,EAAeT,GAGrBK,EAAM,CAAE,GAAI,IACNE,EAAI,EAAGA,EAAIH,EAAKG,IACrBD,EAAIH,EAAKH,EAAGO,GACPN,EAAUS,KAAMR,EAASI,EAAGC,EAAGP,GACnCK,EAAK,GAAIM,KAAML,GAEfD,EAAK,GAAIM,KAAML,GAGjB,OAAOD,CACR"}